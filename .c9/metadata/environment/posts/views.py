{"changed":true,"filter":false,"title":"views.py","tooltip":"/posts/views.py","value":"\nfrom django.shortcuts import render, get_object_or_404, redirect\nfrom django.utils import timezone\nfrom .models import Post\nfrom .forms import BlogPostForm\n\ndef get_posts(request):\n    \"\"\"\n    Create a view of previous posts and render to a template\n    \"\"\"\n\n    posts = Post.objects.filter(published_date__lte=timezone.now()).order_by('-published_date')\n    return render(request, \"blogposts.html\", {'posts': posts})\n\n\ndef post_detail(request, pk):\n    \"\"\"\n    create a view that returns a single post using post ID and render to template or return a 404 error\"\n    \"\"\"\n\n    post = get_object_or_404(Post, pk=pk)\n    post.views += 1\n    post.save()\n    return render(request, \"postdetail.html\", {'post': post})\n\ndef create_or_edit_post(request, pk=None):\n    \"\"\"\n    create a view that allows to create or edit a post \n    \"\"\"\n\n    post = get_object_or_404(Post, pk=pk) if pk else None\n    if request.method == \"POST\":\n        form = BlogPostForm(request.POST, request.FILES, instance=post)\n        if form.is_valid():\n            post = form.save()\n            return redirect(post_detail, post.pk)\n    else:\n        form = BlogPostForm(instance=post)\n        return render(request, 'blogpostform.html', {'form': form})\n        \n","undoManager":{"mark":-2,"position":3,"stack":[[{"start":{"row":35,"column":38},"end":{"row":35,"column":39},"action":"remove","lines":["l"],"id":3},{"start":{"row":35,"column":37},"end":{"row":35,"column":38},"action":"remove","lines":["i"]},{"start":{"row":35,"column":36},"end":{"row":35,"column":37},"action":"remove","lines":["a"]},{"start":{"row":35,"column":35},"end":{"row":35,"column":36},"action":"remove","lines":["t"]}],[{"start":{"row":35,"column":35},"end":{"row":35,"column":36},"action":"insert","lines":["t"],"id":4},{"start":{"row":35,"column":36},"end":{"row":35,"column":37},"action":"insert","lines":["a"]},{"start":{"row":35,"column":37},"end":{"row":35,"column":38},"action":"insert","lines":["i"]},{"start":{"row":35,"column":38},"end":{"row":35,"column":39},"action":"insert","lines":["l"]}],[{"start":{"row":35,"column":28},"end":{"row":35,"column":39},"action":"remove","lines":["post_detail"],"id":5},{"start":{"row":35,"column":28},"end":{"row":35,"column":41},"action":"insert","lines":["post_detail()"]}],[{"start":{"row":35,"column":39},"end":{"row":35,"column":41},"action":"remove","lines":["()"],"id":6}]]},"ace":{"folds":[],"scrolltop":252.5,"scrollleft":0,"selection":{"start":{"row":35,"column":35},"end":{"row":35,"column":35},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":62,"mode":"ace/mode/python"}},"timestamp":1578519593874}